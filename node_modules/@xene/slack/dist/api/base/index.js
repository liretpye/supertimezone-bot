"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const request_1 = require("./request");
const errors_1 = require("../../errors");
const case_1 = require("../../helpers/case");
const stringify = (object) => lodash_1.mapValues(case_1.snake(object), v => lodash_1.isObject(v) ? JSON.stringify(v) : v);
const URI = (ns, method, token) => `https://slack.com/api/${ns}.${method}?token=${token}`;
class APIModule {
    constructor(token) {
        this.token = token;
        this.namespace = this.constructor.name.toLowerCase();
    }
    request(method, form = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const uri = URI(this.namespace, method, this.token);
            const response = yield request_1.request(uri, stringify(form));
            if (!response.ok)
                throw new errors_1.APIError(response.error);
            return case_1.camel(response);
        });
    }
}
exports.APIModule = APIModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBpL2Jhc2UvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLG1DQUE0QztBQUM1Qyx1Q0FBbUM7QUFDbkMseUNBQXVDO0FBQ3ZDLDZDQUFpRDtBQUVqRCxNQUFNLFNBQVMsR0FBRyxDQUFDLE1BQWMsRUFBRSxFQUFFLENBQ25DLGtCQUFTLENBQUMsWUFBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsaUJBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFFcEUsTUFBTSxHQUFHLEdBQUcsQ0FBQyxFQUFVLEVBQUUsTUFBYyxFQUFFLEtBQWEsRUFBRSxFQUFFLENBQ3hELHlCQUF5QixFQUFFLElBQUksTUFBTSxVQUFVLEtBQUssRUFBRSxDQUFBO0FBRXhEO0lBR0UsWUFBb0IsS0FBYTtRQUFiLFVBQUssR0FBTCxLQUFLLENBQVE7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUN0RCxDQUFDO0lBRWUsT0FBTyxDQUFDLE1BQWMsRUFBRSxPQUFlLEVBQUU7O1lBQ3ZELE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDbkQsTUFBTSxRQUFRLEdBQUcsTUFBTSxpQkFBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtZQUNwRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7Z0JBQUMsTUFBTSxJQUFJLGlCQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO1lBQ3BELE1BQU0sQ0FBQyxZQUFLLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDeEIsQ0FBQztLQUFBO0NBQ0Y7QUFiRCw4QkFhQyJ9